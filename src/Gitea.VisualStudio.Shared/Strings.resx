<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CloneView_FailedToLoadProjects" xml:space="preserve">
    <value>Failed to load</value>
  </data>
  <data name="CloneView_NoProjects" xml:space="preserve">
    <value>No projects</value>
  </data>
  <data name="CloneView_Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Common_Browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="Common_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Common_ChooseAGitIgnore" xml:space="preserve">
    <value>Add a .gitignore</value>
  </data>
  <data name="Common_ChooseALicense" xml:space="preserve">
    <value>Add a license</value>
  </data>
  <data name="Common_Clone" xml:space="preserve">
    <value>Clone</value>
  </data>
  <data name="Common_CreateRepository" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Common_Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Common_DescriptionMaxTo" xml:space="preserve">
    <value>Maximum length of description is 500</value>
  </data>
  <data name="Common_GitIgnore" xml:space="preserve">
    <value>Git ignore</value>
  </data>
  <data name="Common_License" xml:space="preserve">
    <value>License</value>
  </data>
  <data name="Common_Loading" xml:space="preserve">
    <value>Loading</value>
  </data>
  <data name="Common_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Common_NameMaxTo" xml:space="preserve">
    <value>Maximum length of name is 64 chars</value>
  </data>
  <data name="Common_New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="Common_Path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="Common_Private" xml:space="preserve">
    <value>Private</value>
  </data>
  <data name="Common_Property" xml:space="preserve">
    <value>Property</value>
  </data>
  <data name="Common_Quit" xml:space="preserve">
    <value>Sign Out</value>
  </data>
  <data name="Confirm_Quit" xml:space="preserve">
    <value>Are you sure you want to quit?</value>
  </data>
  <data name="CreateView_NameIsRequired" xml:space="preserve">
    <value>Name is mandatory</value>
  </data>
  <data name="CreateView_PathIsRequired" xml:space="preserve">
    <value>Path is mandatory</value>
  </data>
  <data name="CreateView_ThisIsACoollProject" xml:space="preserve">
    <value>This is a cool project (optional)</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Git with a cup of tea!</value>
  </data>
  <data name="Invitation_Connect" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="Invitation_SignUp" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="Items_Issues" xml:space="preserve">
    <value>Issues</value>
  </data>
  <data name="Items_Pipeline" xml:space="preserve">
    <value>Pipelines</value>
  </data>
  <data name="Items_MergeRequests" xml:space="preserve">
    <value>Pulls Requests</value>
  </data>
  <data name="Items_Wiki" xml:space="preserve">
    <value>Wiki</value>
  </data>
  <data name="Login_ConnectTo" xml:space="preserve">
    <value>Connect to {0}</value>
    <comment>0 = Common_Name</comment>
  </data>
  <data name="Login_Email" xml:space="preserve">
    <value>User Name or Email </value>
  </data>
  <data name="Login_EmailIsInvalid" xml:space="preserve">
    <value>Invalid email</value>
  </data>
  <data name="Login_EmailIsRequired" xml:space="preserve">
    <value>Email is mandatory</value>
  </data>
  <data name="Login_FailedToLogin" xml:space="preserve">
    <value>Failed to login</value>
  </data>
  <data name="Login_ForgetPassword" xml:space="preserve">
    <value>Forget password?</value>
  </data>
  <data name="Login_Host" xml:space="preserve">
    <value>GiteaHub(https://giteahub.com/)</value>
  </data>
  <data name="Login_Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Login_Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Login_PasswordIsRequired" xml:space="preserve">
    <value>Password is mandatory</value>
  </data>
  <data name="Login_PasswordMinTo" xml:space="preserve">
    <value>Password should at least be 6 chars</value>
  </data>
  <data name="Login_ReSendEmail" xml:space="preserve">
    <value>Resent email to active account</value>
  </data>
  <data name="Login_SignUp" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Gitea</value>
  </data>
  <data name="Provider" xml:space="preserve">
    <value>Gitea</value>
  </data>
  <data name="Publish_Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Publish_Or" xml:space="preserve">
    <value>or</value>
  </data>
  <data name="Publish_Publish" xml:space="preserve">
    <value>Publish</value>
  </data>
  <data name="Publish_SignUp" xml:space="preserve">
    <value>Sign up</value>
  </data>
  <data name="Publish_Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Publish_Submiting" xml:space="preserve">
    <value>Submitting</value>
  </data>
  <data name="Publish_Title" xml:space="preserve">
    <value>Publish to {0}</value>
    <comment>0 = Common_Name</comment>
  </data>
  <data name="Repository_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="CreateViewModel_OnSave_TheProject0AlreadyExists" xml:space="preserve">
    <value>The project {0} already exists!</value>
  </data>
  <data name="Login_HostIsInvalid" xml:space="preserve">
    <value>Host is invalid</value>
  </data>
  <data name="GiteaInvitationSection_GiteaInvitationSection_NoLogin" xml:space="preserve">
    <value>No Login </value>
  </data>
  <data name="TwoFactorAuthentication" xml:space="preserve">
    <value>Two Factor Authentication</value>
  </data>
  <data name="DefaultHost" xml:space="preserve">
    <value>https://giteahub.com/</value>
  </data>
  <data name="WebService_CreateProject_NotLoginYet" xml:space="preserve">
    <value>Not login yet</value>
  </data>
  <data name="CreateSnippetViewModel_FailedToCreateSnippet" xml:space="preserve">
    <value>Failed to create Snippet</value>
  </data>
  <data name="CreateSnippetViewModel_VisibilityIsRequired" xml:space="preserve">
    <value>Visibility Is Required</value>
  </data>
  <data name="CreateSnippetViewModel_DescriptorsIsRequired" xml:space="preserve">
    <value>Descriptors Is Required</value>
  </data>
  <data name="CreateSnippetViewModel_FileNameIsRequired" xml:space="preserve">
    <value>FileName Is Required</value>
  </data>
  <data name="CreateSnippetViewModel_TitleIsRequired" xml:space="preserve">
    <value>Title Is Required</value>
  </data>
  <data name="CreateSnippetViewModel_CodeIsRequired" xml:space="preserve">
    <value>Code IsRequired</value>
  </data>
  <data name="GitAnalysis_GetGiteaTargetDescription_FullID" xml:space="preserve">
    <value>... (Full ID)</value>
  </data>
  <data name="GitAnalysis_Revision" xml:space="preserve">
    <value>Revision: </value>
  </data>
  <data name="GitAnalysisn_Branch" xml:space="preserve">
    <value>Branch: </value>
  </data>
  <data name="GitAnalysis_Blame" xml:space="preserve">
    <value>Blame</value>
  </data>
  <data name="GitAnalysis_Commits" xml:space="preserve">
    <value>Commits</value>
  </data>
  <data name="OpenOnGiteaPackage_CreateSnippet" xml:space="preserve">
    <value>Create Snippet</value>
  </data>
  <data name="CreateSnippetNoTitle" xml:space="preserve">
    <value>no title</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="CreateSnippet_Button" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="Visibility" xml:space="preserve">
    <value>Visibility</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>File Name</value>
  </data>
  <data name="AfterCreatedOpenInTheBrowser" xml:space="preserve">
    <value>After created open  in the browser</value>
  </data>
  <data name="Common_Owner" xml:space="preserve">
    <value>Owner</value>
  </data>
  <data name="Releases" xml:space="preserve">
    <value>Releases</value>
  </data>
  <data name="Activity" xml:space="preserve">
    <value>Activity</value>
  </data>
  <data name="Common_Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="Common_Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Common_Message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="Common_Warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="Common_DeleteLocal" xml:space="preserve">
    <value>Delete Local</value>
  </data>
  <data name="Common_Open" xml:space="preserve">
    <value>Open</value>
  </data>
</root>